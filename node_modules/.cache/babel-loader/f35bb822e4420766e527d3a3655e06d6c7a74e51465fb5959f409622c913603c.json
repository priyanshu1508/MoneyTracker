{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBD\\\\Projects\\\\Money Final Done\\\\track\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  async function register(ev) {\n    ev.preventDefault();\n    const url = process.env.REACT_APP_API_URL + \"/register\";\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      alert(\"User Registered\");\n    } else {\n      alert(\"Registraction Failed\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register\",\n      onSubmit: register,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: ev => setUsername(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: ev => setPassword(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","register","ev","preventDefault","url","process","env","REACT_APP_API_URL","response","fetch","method","body","JSON","stringify","headers","status","alert","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/WEBD/Projects/Money Final Done/track/src/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Register() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  async function register(ev){\r\n        ev.preventDefault();\r\n    const url = process.env.REACT_APP_API_URL + \"/register\";\r\n\r\n        const response = await fetch(url,{\r\n            method:'POST',\r\n            body:JSON.stringify({username,password}),\r\n            headers:{'Content-Type':'application/json'}\r\n        })\r\n        if(response.status === 200){\r\n            alert(\"User Registered\")\r\n        } else {\r\n            alert(\"Registraction Failed\")\r\n        }\r\n    \r\n  }\r\n  return (\r\n    <div>\r\n      <form className=\"register\" onSubmit={register}>\r\n        <h1>Register</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={ev => setUsername(ev.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={ev => setPassword(ev.target.value)}\r\n        />\r\n        <button>Register</button>\r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,eAAeS,QAAQA,CAACC,EAAE,EAAC;IACrBA,EAAE,CAACC,cAAc,CAAC,CAAC;IACvB,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,WAAW;IAEnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAC;MAC7BM,MAAM,EAAC,MAAM;MACbC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;QAAChB,QAAQ;QAACE;MAAQ,CAAC,CAAC;MACxCe,OAAO,EAAC;QAAC,cAAc,EAAC;MAAkB;IAC9C,CAAC,CAAC;IACF,IAAGN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;MACvBC,KAAK,CAAC,iBAAiB,CAAC;IAC5B,CAAC,MAAM;MACHA,KAAK,CAAC,sBAAsB,CAAC;IACjC;EAEN;EACA,oBACEtB,OAAA;IAAAuB,QAAA,eACEvB,OAAA;MAAMwB,SAAS,EAAC,UAAU;MAACC,QAAQ,EAAElB,QAAS;MAAAgB,QAAA,gBAC5CvB,OAAA;QAAAuB,QAAA,EAAI;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB7B,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE7B,QAAS;QAChB8B,QAAQ,EAAEzB,EAAE,IAAIJ,WAAW,CAACI,EAAE,CAAC0B,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACF7B,OAAA;QACE8B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE3B,QAAS;QAChB4B,QAAQ,EAAEzB,EAAE,IAAIF,WAAW,CAACE,EAAE,CAAC0B,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACF7B,OAAA;QAAAuB,QAAA,EAAQ;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV;AAAC3B,EAAA,CAxCuBD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}